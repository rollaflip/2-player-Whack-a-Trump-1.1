// Socket {
//     nsp:
//      Namespace {
//        name: '/',
//        server:
//         Server {
//           nsps: [Object],
//           parentNsps: Map {},
//           _path: '/socket.io',
//           _serveClient: true,
//           parser: [Object],
//           encoder: Encoder {},
//           _adapter: [Function: Adapter],
//           _origins: '*:*',
//           sockets: [Circular],
//           eio: [Server],
//           httpServer: [Server],
//           engine: [Server] },
//        sockets:
//         { u9vVqKf6A2LQlVwTAAAA: [Socket],
//           xigB2i1g0DfWal4LAAAB: [Socket],
//           u0DVrzMCW5quh1uWAAAC: [Socket],
//           fqwWKod08pFSN9sQAAAD: [Socket],
//           NCc4OzpNC7kwTqxGAAAE: [Socket],
//           m4iISgbeahwDGnvFAAAF: [Circular] },
//        connected:
//         { u9vVqKf6A2LQlVwTAAAA: [Socket],
//           xigB2i1g0DfWal4LAAAB: [Socket],
//           u0DVrzMCW5quh1uWAAAC: [Socket],
//           fqwWKod08pFSN9sQAAAD: [Socket],
//           NCc4OzpNC7kwTqxGAAAE: [Socket],
//           m4iISgbeahwDGnvFAAAF: [Circular] },
//        fns: [],
//        ids: 0,
//        rooms: [],
//        flags: {},
//        adapter:
//         Adapter {
//           nsp: [Circular],
//           rooms: [Object],
//           sids: [Object],
//           encoder: Encoder {} },
//        _events: { connection: [Function] },
//        _eventsCount: 1 },
//     server:
//      Server {
//        nsps: { '/': [Namespace] },
//        parentNsps: Map {},
//        _path: '/socket.io',
//        _serveClient: true,
//        parser:
//         { protocol: 4,
//           types: [Array],
//           CONNECT: 0,
//           DISCONNECT: 1,
//           EVENT: 2,
//           ACK: 3,
//           ERROR: 4,
//           BINARY_EVENT: 5,
//           BINARY_ACK: 6,
//           Encoder: [Function: Encoder],
//           Decoder: [Function: Decoder] },
//        encoder: Encoder {},
//        _adapter: [Function: Adapter],
//        _origins: '*:*',
//        sockets:
//         Namespace {
//           name: '/',
//           server: [Circular],
//           sockets: [Object],
//           connected: [Object],
//           fns: [],
//           ids: 0,
//           rooms: [],
//           flags: {},
//           adapter: [Adapter],
//           _events: [Object],
//           _eventsCount: 1 },
//        eio:
//         Server {
//           clients: [Object],
//           clientsCount: 6,
//           wsEngine: 'ws',
//           pingTimeout: 5000,
//           pingInterval: 25000,
//           upgradeTimeout: 10000,
//           maxHttpBufferSize: 100000000,
//           transports: [Array],
//           allowUpgrades: true,
//           allowRequest: [Function: bound ],
//           cookie: 'io',
//           cookiePath: '/',
//           cookieHttpOnly: true,
//           perMessageDeflate: [Object],
//           httpCompression: [Object],
//           initialPacket: [Array],
//           ws: [WebSocketServer],
//           _events: [Object],
//           _eventsCount: 1 },
//        httpServer:
//         Server {
//           _events: [Object],
//           _eventsCount: 6,
//           _maxListeners: undefined,
//           _connections: 6,
//           _handle: [TCP],
//           _usingWorkers: false,
//           _workers: [],
//           _unref: false,
//           allowHalfOpen: true,
//           pauseOnConnect: false,
//           httpAllowHalfOpen: false,
//           timeout: 120000,
//           keepAliveTimeout: 5000,
//           _pendingResponseData: 0,
//           maxHeadersCount: null,
//           _connectionKey: '6::::3000',
//           [Symbol(IncomingMessage)]: [Function],
//           [Symbol(ServerResponse)]: [Function],
//           [Symbol(asyncId)]: 5 },
//        engine:
//         Server {
//           clients: [Object],
//           clientsCount: 6,
//           wsEngine: 'ws',
//           pingTimeout: 5000,
//           pingInterval: 25000,
//           upgradeTimeout: 10000,
//           maxHttpBufferSize: 100000000,
//           transports: [Array],
//           allowUpgrades: true,
//           allowRequest: [Function: bound ],
//           cookie: 'io',
//           cookiePath: '/',
//           cookieHttpOnly: true,
//           perMessageDeflate: [Object],
//           httpCompression: [Object],
//           initialPacket: [Array],
//           ws: [WebSocketServer],
//           _events: [Object],
//           _eventsCount: 1 } },
//     adapter:
//      Adapter {
//        nsp:
//         Namespace {
//           name: '/',
//           server: [Server],
//           sockets: [Object],
//           connected: [Object],
//           fns: [],
//           ids: 0,
//           rooms: [],
//           flags: {},
//           adapter: [Circular],
//           _events: [Object],
//           _eventsCount: 1 },
//        rooms:
//         { u9vVqKf6A2LQlVwTAAAA: [Room],
//           xigB2i1g0DfWal4LAAAB: [Room],
//           u0DVrzMCW5quh1uWAAAC: [Room],
//           fqwWKod08pFSN9sQAAAD: [Room],
//           NCc4OzpNC7kwTqxGAAAE: [Room],
//           m4iISgbeahwDGnvFAAAF: [Room] },
//        sids:
//         { u9vVqKf6A2LQlVwTAAAA: [Object],
//           xigB2i1g0DfWal4LAAAB: [Object],
//           u0DVrzMCW5quh1uWAAAC: [Object],
//           fqwWKod08pFSN9sQAAAD: [Object],
//           NCc4OzpNC7kwTqxGAAAE: [Object],
//           m4iISgbeahwDGnvFAAAF: [Object] },
//        encoder: Encoder {} },
//     id: 'm4iISgbeahwDGnvFAAAF',
//     client:
//      Client {
//        server:
//         Server {
//           nsps: [Object],
//           parentNsps: Map {},
//           _path: '/socket.io',
//           _serveClient: true,
//           parser: [Object],
//           encoder: Encoder {},
//           _adapter: [Function: Adapter],
//           _origins: '*:*',
//           sockets: [Namespace],
//           eio: [Server],
//           httpServer: [Server],
//           engine: [Server] },
//        conn:
//         Socket {
//           id: 'm4iISgbeahwDGnvFAAAF',
//           server: [Server],
//           upgrading: false,
//           upgraded: true,
//           readyState: 'open',
//           writeBuffer: [],
//           packetsFn: [],
//           sentCallbackFn: [],
//           cleanupFn: [Array],
//           request: [IncomingMessage],
//           remoteAddress: '::1',
//           checkIntervalTimer: null,
//           upgradeTimeoutTimer: null,
//           pingTimeoutTimer: [Timeout],
//           transport: [WebSocket],
//           _events: [Object],
//           _eventsCount: 3 },
//        encoder: Encoder {},
//        decoder: Decoder { reconstructor: null, _callbacks: [Object] },
//        id: 'm4iISgbeahwDGnvFAAAF',
//        request:
//         IncomingMessage {
//           _readableState: [ReadableState],
//           readable: false,
//           _events: {},
//           _eventsCount: 0,
//           _maxListeners: undefined,
//           socket: [Socket],
//           connection: [Socket],
//           httpVersionMajor: 1,
//           httpVersionMinor: 1,
//           httpVersion: '1.1',
//           complete: true,
//           headers: [Object],
//           rawHeaders: [Array],
//           trailers: {},
//           rawTrailers: [],
//           aborted: false,
//           upgrade: false,
//           url: '/socket.io/?EIO=3&transport=polling&t=MGGJRDj',
//           method: 'GET',
//           statusCode: null,
//           statusMessage: null,
//           client: [Socket],
//           _consuming: false,
//           _dumped: true,
//           _query: [Object],
//           res: [ServerResponse],
//           cleanup: [Function: cleanup] },
//        onclose: [Function: bound ],
//        ondata: [Function: bound ],
//        onerror: [Function: bound ],
//        ondecoded: [Function: bound ],
//        sockets: { m4iISgbeahwDGnvFAAAF: [Circular] },
//        nsps: { '/': [Circular] },
//        connectBuffer: [] },
//     conn:
//      Socket {
//        id: 'm4iISgbeahwDGnvFAAAF',
//        server:
//         Server {
//           clients: [Object],
//           clientsCount: 6,
//           wsEngine: 'ws',
//           pingTimeout: 5000,
//           pingInterval: 25000,
//           upgradeTimeout: 10000,
//           maxHttpBufferSize: 100000000,
//           transports: [Array],
//           allowUpgrades: true,
//           allowRequest: [Function: bound ],
//           cookie: 'io',
//           cookiePath: '/',
//           cookieHttpOnly: true,
//           perMessageDeflate: [Object],
//           httpCompression: [Object],
//           initialPacket: [Array],
//           ws: [WebSocketServer],
//           _events: [Object],
//           _eventsCount: 1 },
//        upgrading: false,
//        upgraded: true,
//        readyState: 'open',
//        writeBuffer: [],
//        packetsFn: [],
//        sentCallbackFn: [],
//        cleanupFn: [ [Function], [Function] ],
//        request:
//         IncomingMessage {
//           _readableState: [ReadableState],
//           readable: false,
//           _events: {},
//           _eventsCount: 0,
//           _maxListeners: undefined,
//           socket: [Socket],
//           connection: [Socket],
//           httpVersionMajor: 1,
//           httpVersionMinor: 1,
//           httpVersion: '1.1',
//           complete: true,
//           headers: [Object],
//           rawHeaders: [Array],
//           trailers: {},
//           rawTrailers: [],
//           aborted: false,
//           upgrade: false,
//           url: '/socket.io/?EIO=3&transport=polling&t=MGGJRDj',
//           method: 'GET',
//           statusCode: null,
//           statusMessage: null,
//           client: [Socket],
//           _consuming: false,
//           _dumped: true,
//           _query: [Object],
//           res: [ServerResponse],
//           cleanup: [Function: cleanup] },
//        remoteAddress: '::1',
//        checkIntervalTimer: null,
//        upgradeTimeoutTimer: null,
//        pingTimeoutTimer:
//         Timeout {
//           _called: false,
//           _idleTimeout: 30000,
//           _idlePrev: [Timeout],
//           _idleNext: [Timeout],
//           _idleStart: 1977,
//           _onTimeout: [Function],
//           _timerArgs: undefined,
//           _repeat: null,
//           _destroyed: false,
//           [Symbol(unrefed)]: false,
//           [Symbol(asyncId)]: 371,
//           [Symbol(triggerId)]: 354 },
//        transport:
//         WebSocket {
//           readyState: 'open',
//           discarded: false,
//           socket: [WebSocket],
//           writable: true,
//           perMessageDeflate: [Object],
//           supportsBinary: true,
//           _events: [Object],
//           _eventsCount: 4 },
//        _events:
//         { close: [Array],
//           data: [Function: bound ],
//           error: [Function: bound ] },
//        _eventsCount: 3 },
//     rooms: { m4iISgbeahwDGnvFAAAF: 'm4iISgbeahwDGnvFAAAF' },
//     acks: {},
//     connected: true,
//     disconnected: false,
//     handshake:
//      { headers:
//         { host: 'localhost:3000',
//           connection: 'keep-alive',
//           accept: '*/*',
//           'user-agent':
//            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36',
//           referer: 'http://localhost:3000/',
//           'accept-encoding': 'gzip, deflate, br',
//           'accept-language': 'en-US,en;q=0.9',
//           cookie:
//            'connect.sid=s%3AhFv_rbGxlrQ4QlDi0gvHAsnuy8wZqI3d.iphjuEjbd1Ivp2t7pmXe0yEu%2FUSFSH2d4kLl9tVx63M; io=fqwWKod08pFSN9sQAAAD' },
//        time: 'Sun Jun 17 2018 20:31:25 GMT-0400 (Eastern Daylight Time)',
//        address: '::1',
//        xdomain: false,
//        secure: false,
//        issued: 1529281885042,
//        url: '/socket.io/?EIO=3&transport=polling&t=MGGJRDj',
//        query: { EIO: '3', transport: 'polling', t: 'MGGJRDj' } },
//     fns: [],
//     flags: {},
//     _rooms: [],
//     _events:
//      { disconnect: [Function],
//        msg: [Function],
//        scoreUpdate: [Function] },
//     _eventsCount: 3 }
//   pid from client  u0DVrzMCW5quh1uWAAAC
//   0